edition = "2023";

package hestia.jobfair.v1.events;
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "common.proto";
option go_package = "hestia/jobfair/api/pb/events";

service Events {
    rpc CreateEvent(Event) returns (hestia.jobfair.v1.common.Id);
    rpc GetEvents(google.protobuf.Empty) returns (EventList);
    rpc GetEvent(hestia.jobfair.v1.common.Id) returns (Event);
    rpc UpdateEvent(Event) returns (google.protobuf.Empty);
    rpc DeleteEvent(hestia.jobfair.v1.common.Id) returns (google.protobuf.Empty);
    rpc SubscribeToEvent(hestia.jobfair.v1.common.Id) returns (google.protobuf.Empty);
    rpc UnsubscribeToEvent(hestia.jobfair.v1.common.Id) returns (google.protobuf.Empty);
    //rpc Alive (hestia.jobfair.v1.common.Token) returns (google.protobuf.Empty);
    //rpc Logout (hestia.jobfair.v1.common.Token) returns (google.protobuf.Empty);
}

message Speaker {
    string id = 1 [features.field_presence = EXPLICIT];
    string name = 2;
    string position = 3;
    string company = 4;
    string photo = 5 [features.field_presence = EXPLICIT];
}

message Event {
    string id = 1 [features.field_presence = EXPLICIT];
    string name = 2;
    repeated Speaker speakers = 3;
    string description = 4;
    string location = 5;
    google.protobuf.Timestamp start_time = 6;
    google.protobuf.Timestamp end_time = 7;
    int32 seats = 8;
    string info = 9;
}

message EventList {
    repeated Event events = 1;
}