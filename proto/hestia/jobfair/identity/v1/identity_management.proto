edition = "2023";

package hestia.jobfair.identity.v1;

import "google/protobuf/go_features.proto";
import "google/type/date.proto";
import "hestia/jobfair/common/v1/common.proto";

option features.(pb.go).api_level = API_OPAQUE;
option go_package = "hestia/jobfair/api/pb/identity";

service IdentityManagementService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Alive(AliveRequest) returns (AliveResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  hestia.jobfair.common.v1.Token token = 1;
}

message RegisterRequest {
  User user = 1;
  string password = 2 [features.field_presence = IMPLICIT];
  Education education = 3;
}

message RegisterResponse {}

message AliveRequest {
  hestia.jobfair.common.v1.Token token = 1;
}

message AliveResponse {}

message LogoutRequest {
  hestia.jobfair.common.v1.Token token = 1;
}

message LogoutResponse {}

service UserManagementService {
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc AddExperience(AddExperienceRequest) returns (AddExperienceResponse);
  rpc AddEducation(AddEducationRequest) returns (AddEducationResponse);
  rpc GetExperiences(GetExperiencesRequest) returns (GetExperiencesResponse);
  rpc GetEducations(GetEducationsRequest) returns (GetEducationsResponse);
  rpc DeleteExperience(DeleteExperienceRequest) returns (DeleteExperienceResponse);
  rpc DeleteEducation(DeleteEducationRequest) returns (DeleteEducationResponse);
}

message GetUsersRequest {
  hestia.jobfair.common.v1.TimePagination time_pagination = 1;
}

message GetUsersResponse {
  hestia.jobfair.common.v1.TimePagination pagination = 1;
  repeated User users = 2;
}

message GetUserRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message GetUserResponse {
  User user = 1;
}

message SearchUsersRequest {
  oneof query {
    string name = 1;
    string email = 2;
  }
}

message SearchUsersResponse {
  repeated User users = 2;
}

message UpdateUserRequest {
  User user = 1;
}

message UpdateUserResponse {}

message DeleteUserRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message DeleteUserResponse {}

message AddExperienceRequest {
  Experience experience = 1;
}

message AddExperienceResponse {}

message AddEducationRequest {
  Education education = 1;
}

message AddEducationResponse {}

message GetExperiencesRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message GetExperiencesResponse {
  ExperienceList experience_list = 1;
}

message GetEducationsRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message GetEducationsResponse {
  EducationList education_list = 1;
}

message DeleteExperienceRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message DeleteExperienceResponse {}

message DeleteEducationRequest {
  hestia.jobfair.common.v1.Id id = 1;
}

message DeleteEducationResponse {}

message User {
  string name = 1;
  string email = 2;
  string photo = 3 [features.field_presence = EXPLICIT];
  string description = 4 [features.field_presence = EXPLICIT];
  repeated hestia.jobfair.common.v1.Interest interests = 5;
  repeated hestia.jobfair.common.v1.ContractType contract_types = 6;
}

message Education {
  string school = 1;
  string degree = 2;
  bool alumni = 3;
  // if year is set then its the current education
  int32 year = 4;
  google.type.Date start_date = 5 [features.field_presence = EXPLICIT];
  google.type.Date end_date = 6 [features.field_presence = EXPLICIT];
  string info = 7 [features.field_presence = EXPLICIT];
}

message Experience {
  string company = 1;
  string position = 2;
  google.type.Date start_date = 3 [features.field_presence = EXPLICIT];
  google.type.Date end_date = 4 [features.field_presence = EXPLICIT];
  string info = 5 [features.field_presence = EXPLICIT];
}

message ExperienceList {
  repeated Experience experiences = 1;
}

message EducationList {
  repeated Education educations = 1;
}
