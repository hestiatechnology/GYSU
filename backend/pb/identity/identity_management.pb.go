// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: hestia/jobfair/identity/v1/identity_management.proto

package identity

import (
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	common "hestia/jobfair/api/pb/common"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Email       *string                `protobuf:"bytes,1,opt,name=email"`
	xxx_hidden_Password    *string                `protobuf:"bytes,2,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *LoginRequest) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LoginRequest) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LoginRequest) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoginRequest) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LoginRequest) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Email = nil
}

func (x *LoginRequest) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

type LoginRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Email    *string
	Password *string
}

func (b0 LoginRequest_builder) Build() *LoginRequest {
	m0 := &LoginRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Email = b.Email
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

type LoginResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Token *common.Token          `protobuf:"bytes,1,opt,name=token"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoginResponse) GetToken() *common.Token {
	if x != nil {
		return x.xxx_hidden_Token
	}
	return nil
}

func (x *LoginResponse) SetToken(v *common.Token) {
	x.xxx_hidden_Token = v
}

func (x *LoginResponse) HasToken() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Token != nil
}

func (x *LoginResponse) ClearToken() {
	x.xxx_hidden_Token = nil
}

type LoginResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Token *common.Token
}

func (b0 LoginResponse_builder) Build() *LoginResponse {
	m0 := &LoginResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Token = b.Token
	return m0
}

type RegisterRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_User      *User                  `protobuf:"bytes,1,opt,name=user"`
	xxx_hidden_Password  string                 `protobuf:"bytes,2,opt,name=password"`
	xxx_hidden_Education *Education             `protobuf:"bytes,3,opt,name=education"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterRequest) GetUser() *User {
	if x != nil {
		return x.xxx_hidden_User
	}
	return nil
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.xxx_hidden_Password
	}
	return ""
}

func (x *RegisterRequest) GetEducation() *Education {
	if x != nil {
		return x.xxx_hidden_Education
	}
	return nil
}

func (x *RegisterRequest) SetUser(v *User) {
	x.xxx_hidden_User = v
}

func (x *RegisterRequest) SetPassword(v string) {
	x.xxx_hidden_Password = v
}

func (x *RegisterRequest) SetEducation(v *Education) {
	x.xxx_hidden_Education = v
}

func (x *RegisterRequest) HasUser() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_User != nil
}

func (x *RegisterRequest) HasEducation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Education != nil
}

func (x *RegisterRequest) ClearUser() {
	x.xxx_hidden_User = nil
}

func (x *RegisterRequest) ClearEducation() {
	x.xxx_hidden_Education = nil
}

type RegisterRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	User      *User
	Password  string
	Education *Education
}

func (b0 RegisterRequest_builder) Build() *RegisterRequest {
	m0 := &RegisterRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_User = b.User
	x.xxx_hidden_Password = b.Password
	x.xxx_hidden_Education = b.Education
	return m0
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type RegisterResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 RegisterResponse_builder) Build() *RegisterResponse {
	m0 := &RegisterResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type AliveRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Token *common.Token          `protobuf:"bytes,1,opt,name=token"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AliveRequest) Reset() {
	*x = AliveRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliveRequest) ProtoMessage() {}

func (x *AliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AliveRequest) GetToken() *common.Token {
	if x != nil {
		return x.xxx_hidden_Token
	}
	return nil
}

func (x *AliveRequest) SetToken(v *common.Token) {
	x.xxx_hidden_Token = v
}

func (x *AliveRequest) HasToken() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Token != nil
}

func (x *AliveRequest) ClearToken() {
	x.xxx_hidden_Token = nil
}

type AliveRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Token *common.Token
}

func (b0 AliveRequest_builder) Build() *AliveRequest {
	m0 := &AliveRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Token = b.Token
	return m0
}

type AliveResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AliveResponse) Reset() {
	*x = AliveResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliveResponse) ProtoMessage() {}

func (x *AliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type AliveResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 AliveResponse_builder) Build() *AliveResponse {
	m0 := &AliveResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type LogoutRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Token *common.Token          `protobuf:"bytes,1,opt,name=token"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogoutRequest) GetToken() *common.Token {
	if x != nil {
		return x.xxx_hidden_Token
	}
	return nil
}

func (x *LogoutRequest) SetToken(v *common.Token) {
	x.xxx_hidden_Token = v
}

func (x *LogoutRequest) HasToken() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Token != nil
}

func (x *LogoutRequest) ClearToken() {
	x.xxx_hidden_Token = nil
}

type LogoutRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Token *common.Token
}

func (b0 LogoutRequest_builder) Build() *LogoutRequest {
	m0 := &LogoutRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Token = b.Token
	return m0
}

type LogoutResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type LogoutResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 LogoutResponse_builder) Build() *LogoutResponse {
	m0 := &LogoutResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetUsersRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TimePagination *common.TimePagination `protobuf:"bytes,1,opt,name=time_pagination,json=timePagination"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUsersRequest) GetTimePagination() *common.TimePagination {
	if x != nil {
		return x.xxx_hidden_TimePagination
	}
	return nil
}

func (x *GetUsersRequest) SetTimePagination(v *common.TimePagination) {
	x.xxx_hidden_TimePagination = v
}

func (x *GetUsersRequest) HasTimePagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TimePagination != nil
}

func (x *GetUsersRequest) ClearTimePagination() {
	x.xxx_hidden_TimePagination = nil
}

type GetUsersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TimePagination *common.TimePagination
}

func (b0 GetUsersRequest_builder) Build() *GetUsersRequest {
	m0 := &GetUsersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TimePagination = b.TimePagination
	return m0
}

type GetUsersResponse struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Pagination *common.TimePagination `protobuf:"bytes,1,opt,name=pagination"`
	xxx_hidden_Users      *[]*User               `protobuf:"bytes,2,rep,name=users"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUsersResponse) GetPagination() *common.TimePagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *GetUsersResponse) GetUsers() []*User {
	if x != nil {
		if x.xxx_hidden_Users != nil {
			return *x.xxx_hidden_Users
		}
	}
	return nil
}

func (x *GetUsersResponse) SetPagination(v *common.TimePagination) {
	x.xxx_hidden_Pagination = v
}

func (x *GetUsersResponse) SetUsers(v []*User) {
	x.xxx_hidden_Users = &v
}

func (x *GetUsersResponse) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *GetUsersResponse) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

type GetUsersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pagination *common.TimePagination
	Users      []*User
}

func (b0 GetUsersResponse_builder) Build() *GetUsersResponse {
	m0 := &GetUsersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Pagination = b.Pagination
	x.xxx_hidden_Users = &b.Users
	return m0
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUserRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *GetUserRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *GetUserRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *GetUserRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type GetUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 GetUserRequest_builder) Build() *GetUserRequest {
	m0 := &GetUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type GetUserResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_User *User                  `protobuf:"bytes,1,opt,name=user"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.xxx_hidden_User
	}
	return nil
}

func (x *GetUserResponse) SetUser(v *User) {
	x.xxx_hidden_User = v
}

func (x *GetUserResponse) HasUser() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_User != nil
}

func (x *GetUserResponse) ClearUser() {
	x.xxx_hidden_User = nil
}

type GetUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	User *User
}

func (b0 GetUserResponse_builder) Build() *GetUserResponse {
	m0 := &GetUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_User = b.User
	return m0
}

type SearchUsersRequest struct {
	state            protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Query isSearchUsersRequest_Query `protobuf_oneof:"query"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SearchUsersRequest) Reset() {
	*x = SearchUsersRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersRequest) ProtoMessage() {}

func (x *SearchUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchUsersRequest) GetName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*searchUsersRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *SearchUsersRequest) GetEmail() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*searchUsersRequest_Email); ok {
			return x.Email
		}
	}
	return ""
}

func (x *SearchUsersRequest) SetName(v string) {
	x.xxx_hidden_Query = &searchUsersRequest_Name{v}
}

func (x *SearchUsersRequest) SetEmail(v string) {
	x.xxx_hidden_Query = &searchUsersRequest_Email{v}
}

func (x *SearchUsersRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *SearchUsersRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*searchUsersRequest_Name)
	return ok
}

func (x *SearchUsersRequest) HasEmail() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*searchUsersRequest_Email)
	return ok
}

func (x *SearchUsersRequest) ClearQuery() {
	x.xxx_hidden_Query = nil
}

func (x *SearchUsersRequest) ClearName() {
	if _, ok := x.xxx_hidden_Query.(*searchUsersRequest_Name); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *SearchUsersRequest) ClearEmail() {
	if _, ok := x.xxx_hidden_Query.(*searchUsersRequest_Email); ok {
		x.xxx_hidden_Query = nil
	}
}

const SearchUsersRequest_Query_not_set_case case_SearchUsersRequest_Query = 0
const SearchUsersRequest_Name_case case_SearchUsersRequest_Query = 1
const SearchUsersRequest_Email_case case_SearchUsersRequest_Query = 2

func (x *SearchUsersRequest) WhichQuery() case_SearchUsersRequest_Query {
	if x == nil {
		return SearchUsersRequest_Query_not_set_case
	}
	switch x.xxx_hidden_Query.(type) {
	case *searchUsersRequest_Name:
		return SearchUsersRequest_Name_case
	case *searchUsersRequest_Email:
		return SearchUsersRequest_Email_case
	default:
		return SearchUsersRequest_Query_not_set_case
	}
}

type SearchUsersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Query:
	Name  *string
	Email *string
	// -- end of xxx_hidden_Query
}

func (b0 SearchUsersRequest_builder) Build() *SearchUsersRequest {
	m0 := &SearchUsersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		x.xxx_hidden_Query = &searchUsersRequest_Name{*b.Name}
	}
	if b.Email != nil {
		x.xxx_hidden_Query = &searchUsersRequest_Email{*b.Email}
	}
	return m0
}

type case_SearchUsersRequest_Query protoreflect.FieldNumber

func (x case_SearchUsersRequest_Query) String() string {
	md := file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[12].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSearchUsersRequest_Query interface {
	isSearchUsersRequest_Query()
}

type searchUsersRequest_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,oneof"`
}

type searchUsersRequest_Email struct {
	Email string `protobuf:"bytes,2,opt,name=email,oneof"`
}

func (*searchUsersRequest_Name) isSearchUsersRequest_Query() {}

func (*searchUsersRequest_Email) isSearchUsersRequest_Query() {}

type SearchUsersResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Users *[]*User               `protobuf:"bytes,2,rep,name=users"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SearchUsersResponse) Reset() {
	*x = SearchUsersResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersResponse) ProtoMessage() {}

func (x *SearchUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchUsersResponse) GetUsers() []*User {
	if x != nil {
		if x.xxx_hidden_Users != nil {
			return *x.xxx_hidden_Users
		}
	}
	return nil
}

func (x *SearchUsersResponse) SetUsers(v []*User) {
	x.xxx_hidden_Users = &v
}

type SearchUsersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Users []*User
}

func (b0 SearchUsersResponse_builder) Build() *SearchUsersResponse {
	m0 := &SearchUsersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Users = &b.Users
	return m0
}

type UpdateUserRequest struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_User *User                  `protobuf:"bytes,1,opt,name=user"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.xxx_hidden_User
	}
	return nil
}

func (x *UpdateUserRequest) SetUser(v *User) {
	x.xxx_hidden_User = v
}

func (x *UpdateUserRequest) HasUser() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_User != nil
}

func (x *UpdateUserRequest) ClearUser() {
	x.xxx_hidden_User = nil
}

type UpdateUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	User *User
}

func (b0 UpdateUserRequest_builder) Build() *UpdateUserRequest {
	m0 := &UpdateUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_User = b.User
	return m0
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type UpdateUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 UpdateUserResponse_builder) Build() *UpdateUserResponse {
	m0 := &UpdateUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteUserRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *DeleteUserRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *DeleteUserRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *DeleteUserRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type DeleteUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 DeleteUserRequest_builder) Build() *DeleteUserRequest {
	m0 := &DeleteUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteUserResponse_builder) Build() *DeleteUserResponse {
	m0 := &DeleteUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type AddExperienceRequest struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Experience *Experience            `protobuf:"bytes,1,opt,name=experience"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AddExperienceRequest) Reset() {
	*x = AddExperienceRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExperienceRequest) ProtoMessage() {}

func (x *AddExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddExperienceRequest) GetExperience() *Experience {
	if x != nil {
		return x.xxx_hidden_Experience
	}
	return nil
}

func (x *AddExperienceRequest) SetExperience(v *Experience) {
	x.xxx_hidden_Experience = v
}

func (x *AddExperienceRequest) HasExperience() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Experience != nil
}

func (x *AddExperienceRequest) ClearExperience() {
	x.xxx_hidden_Experience = nil
}

type AddExperienceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Experience *Experience
}

func (b0 AddExperienceRequest_builder) Build() *AddExperienceRequest {
	m0 := &AddExperienceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Experience = b.Experience
	return m0
}

type AddExperienceResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExperienceResponse) Reset() {
	*x = AddExperienceResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExperienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExperienceResponse) ProtoMessage() {}

func (x *AddExperienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type AddExperienceResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 AddExperienceResponse_builder) Build() *AddExperienceResponse {
	m0 := &AddExperienceResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type AddEducationRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Education *Education             `protobuf:"bytes,1,opt,name=education"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AddEducationRequest) Reset() {
	*x = AddEducationRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEducationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEducationRequest) ProtoMessage() {}

func (x *AddEducationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddEducationRequest) GetEducation() *Education {
	if x != nil {
		return x.xxx_hidden_Education
	}
	return nil
}

func (x *AddEducationRequest) SetEducation(v *Education) {
	x.xxx_hidden_Education = v
}

func (x *AddEducationRequest) HasEducation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Education != nil
}

func (x *AddEducationRequest) ClearEducation() {
	x.xxx_hidden_Education = nil
}

type AddEducationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Education *Education
}

func (b0 AddEducationRequest_builder) Build() *AddEducationRequest {
	m0 := &AddEducationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Education = b.Education
	return m0
}

type AddEducationResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEducationResponse) Reset() {
	*x = AddEducationResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEducationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEducationResponse) ProtoMessage() {}

func (x *AddEducationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type AddEducationResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 AddEducationResponse_builder) Build() *AddEducationResponse {
	m0 := &AddEducationResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetExperiencesRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExperiencesRequest) Reset() {
	*x = GetExperiencesRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperiencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperiencesRequest) ProtoMessage() {}

func (x *GetExperiencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetExperiencesRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *GetExperiencesRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *GetExperiencesRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *GetExperiencesRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type GetExperiencesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 GetExperiencesRequest_builder) Build() *GetExperiencesRequest {
	m0 := &GetExperiencesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type GetExperiencesResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExperienceList *ExperienceList        `protobuf:"bytes,1,opt,name=experience_list,json=experienceList"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetExperiencesResponse) Reset() {
	*x = GetExperiencesResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperiencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperiencesResponse) ProtoMessage() {}

func (x *GetExperiencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetExperiencesResponse) GetExperienceList() *ExperienceList {
	if x != nil {
		return x.xxx_hidden_ExperienceList
	}
	return nil
}

func (x *GetExperiencesResponse) SetExperienceList(v *ExperienceList) {
	x.xxx_hidden_ExperienceList = v
}

func (x *GetExperiencesResponse) HasExperienceList() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExperienceList != nil
}

func (x *GetExperiencesResponse) ClearExperienceList() {
	x.xxx_hidden_ExperienceList = nil
}

type GetExperiencesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExperienceList *ExperienceList
}

func (b0 GetExperiencesResponse_builder) Build() *GetExperiencesResponse {
	m0 := &GetExperiencesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ExperienceList = b.ExperienceList
	return m0
}

type GetEducationsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEducationsRequest) Reset() {
	*x = GetEducationsRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEducationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEducationsRequest) ProtoMessage() {}

func (x *GetEducationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetEducationsRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *GetEducationsRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *GetEducationsRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *GetEducationsRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type GetEducationsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 GetEducationsRequest_builder) Build() *GetEducationsRequest {
	m0 := &GetEducationsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type GetEducationsResponse struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EducationList *EducationList         `protobuf:"bytes,1,opt,name=education_list,json=educationList"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetEducationsResponse) Reset() {
	*x = GetEducationsResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEducationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEducationsResponse) ProtoMessage() {}

func (x *GetEducationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetEducationsResponse) GetEducationList() *EducationList {
	if x != nil {
		return x.xxx_hidden_EducationList
	}
	return nil
}

func (x *GetEducationsResponse) SetEducationList(v *EducationList) {
	x.xxx_hidden_EducationList = v
}

func (x *GetEducationsResponse) HasEducationList() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EducationList != nil
}

func (x *GetEducationsResponse) ClearEducationList() {
	x.xxx_hidden_EducationList = nil
}

type GetEducationsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	EducationList *EducationList
}

func (b0 GetEducationsResponse_builder) Build() *GetEducationsResponse {
	m0 := &GetEducationsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_EducationList = b.EducationList
	return m0
}

type DeleteExperienceRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExperienceRequest) Reset() {
	*x = DeleteExperienceRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExperienceRequest) ProtoMessage() {}

func (x *DeleteExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteExperienceRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *DeleteExperienceRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *DeleteExperienceRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *DeleteExperienceRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type DeleteExperienceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 DeleteExperienceRequest_builder) Build() *DeleteExperienceRequest {
	m0 := &DeleteExperienceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type DeleteExperienceResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExperienceResponse) Reset() {
	*x = DeleteExperienceResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExperienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExperienceResponse) ProtoMessage() {}

func (x *DeleteExperienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteExperienceResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteExperienceResponse_builder) Build() *DeleteExperienceResponse {
	m0 := &DeleteExperienceResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DeleteEducationRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id *common.Id             `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEducationRequest) Reset() {
	*x = DeleteEducationRequest{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEducationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEducationRequest) ProtoMessage() {}

func (x *DeleteEducationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteEducationRequest) GetId() *common.Id {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *DeleteEducationRequest) SetId(v *common.Id) {
	x.xxx_hidden_Id = v
}

func (x *DeleteEducationRequest) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *DeleteEducationRequest) ClearId() {
	x.xxx_hidden_Id = nil
}

type DeleteEducationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *common.Id
}

func (b0 DeleteEducationRequest_builder) Build() *DeleteEducationRequest {
	m0 := &DeleteEducationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type DeleteEducationResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEducationResponse) Reset() {
	*x = DeleteEducationResponse{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEducationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEducationResponse) ProtoMessage() {}

func (x *DeleteEducationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteEducationResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteEducationResponse_builder) Build() *DeleteEducationResponse {
	m0 := &DeleteEducationResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type User struct {
	state                    protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                 `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Email         *string                 `protobuf:"bytes,2,opt,name=email"`
	xxx_hidden_Photo         *string                 `protobuf:"bytes,3,opt,name=photo"`
	xxx_hidden_Description   *string                 `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_Interests     *[]*common.Interest     `protobuf:"bytes,5,rep,name=interests"`
	xxx_hidden_ContractTypes *[]*common.ContractType `protobuf:"bytes,6,rep,name=contract_types,json=contractTypes"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *User) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *User) GetPhoto() string {
	if x != nil {
		if x.xxx_hidden_Photo != nil {
			return *x.xxx_hidden_Photo
		}
		return ""
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *User) GetInterests() []*common.Interest {
	if x != nil {
		if x.xxx_hidden_Interests != nil {
			return *x.xxx_hidden_Interests
		}
	}
	return nil
}

func (x *User) GetContractTypes() []*common.ContractType {
	if x != nil {
		if x.xxx_hidden_ContractTypes != nil {
			return *x.xxx_hidden_ContractTypes
		}
	}
	return nil
}

func (x *User) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *User) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *User) SetPhoto(v string) {
	x.xxx_hidden_Photo = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *User) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *User) SetInterests(v []*common.Interest) {
	x.xxx_hidden_Interests = &v
}

func (x *User) SetContractTypes(v []*common.ContractType) {
	x.xxx_hidden_ContractTypes = &v
}

func (x *User) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *User) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *User) HasPhoto() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *User) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *User) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *User) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Email = nil
}

func (x *User) ClearPhoto() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Photo = nil
}

func (x *User) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

type User_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	Email         *string
	Photo         *string
	Description   *string
	Interests     []*common.Interest
	ContractTypes []*common.ContractType
}

func (b0 User_builder) Build() *User {
	m0 := &User{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Email = b.Email
	}
	if b.Photo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Photo = b.Photo
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Interests = &b.Interests
	x.xxx_hidden_ContractTypes = &b.ContractTypes
	return m0
}

type Education struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_School      *string                `protobuf:"bytes,1,opt,name=school"`
	xxx_hidden_Degree      *string                `protobuf:"bytes,2,opt,name=degree"`
	xxx_hidden_Alumni      bool                   `protobuf:"varint,3,opt,name=alumni"`
	xxx_hidden_Year        int32                  `protobuf:"varint,4,opt,name=year"`
	xxx_hidden_StartDate   *date.Date             `protobuf:"bytes,5,opt,name=start_date,json=startDate"`
	xxx_hidden_EndDate     *date.Date             `protobuf:"bytes,6,opt,name=end_date,json=endDate"`
	xxx_hidden_Info        *string                `protobuf:"bytes,7,opt,name=info"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Education) Reset() {
	*x = Education{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Education) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Education) ProtoMessage() {}

func (x *Education) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Education) GetSchool() string {
	if x != nil {
		if x.xxx_hidden_School != nil {
			return *x.xxx_hidden_School
		}
		return ""
	}
	return ""
}

func (x *Education) GetDegree() string {
	if x != nil {
		if x.xxx_hidden_Degree != nil {
			return *x.xxx_hidden_Degree
		}
		return ""
	}
	return ""
}

func (x *Education) GetAlumni() bool {
	if x != nil {
		return x.xxx_hidden_Alumni
	}
	return false
}

func (x *Education) GetYear() int32 {
	if x != nil {
		return x.xxx_hidden_Year
	}
	return 0
}

func (x *Education) GetStartDate() *date.Date {
	if x != nil {
		return x.xxx_hidden_StartDate
	}
	return nil
}

func (x *Education) GetEndDate() *date.Date {
	if x != nil {
		return x.xxx_hidden_EndDate
	}
	return nil
}

func (x *Education) GetInfo() string {
	if x != nil {
		if x.xxx_hidden_Info != nil {
			return *x.xxx_hidden_Info
		}
		return ""
	}
	return ""
}

func (x *Education) SetSchool(v string) {
	x.xxx_hidden_School = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *Education) SetDegree(v string) {
	x.xxx_hidden_Degree = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *Education) SetAlumni(v bool) {
	x.xxx_hidden_Alumni = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *Education) SetYear(v int32) {
	x.xxx_hidden_Year = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *Education) SetStartDate(v *date.Date) {
	x.xxx_hidden_StartDate = v
}

func (x *Education) SetEndDate(v *date.Date) {
	x.xxx_hidden_EndDate = v
}

func (x *Education) SetInfo(v string) {
	x.xxx_hidden_Info = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *Education) HasSchool() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Education) HasDegree() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Education) HasAlumni() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Education) HasYear() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Education) HasStartDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartDate != nil
}

func (x *Education) HasEndDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EndDate != nil
}

func (x *Education) HasInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Education) ClearSchool() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_School = nil
}

func (x *Education) ClearDegree() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Degree = nil
}

func (x *Education) ClearAlumni() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Alumni = false
}

func (x *Education) ClearYear() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Year = 0
}

func (x *Education) ClearStartDate() {
	x.xxx_hidden_StartDate = nil
}

func (x *Education) ClearEndDate() {
	x.xxx_hidden_EndDate = nil
}

func (x *Education) ClearInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Info = nil
}

type Education_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	School *string
	Degree *string
	Alumni *bool
	// if year is set then its the current education
	Year      *int32
	StartDate *date.Date
	EndDate   *date.Date
	Info      *string
}

func (b0 Education_builder) Build() *Education {
	m0 := &Education{}
	b, x := &b0, m0
	_, _ = b, x
	if b.School != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_School = b.School
	}
	if b.Degree != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Degree = b.Degree
	}
	if b.Alumni != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Alumni = *b.Alumni
	}
	if b.Year != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Year = *b.Year
	}
	x.xxx_hidden_StartDate = b.StartDate
	x.xxx_hidden_EndDate = b.EndDate
	if b.Info != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Info = b.Info
	}
	return m0
}

type Experience struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Company     *string                `protobuf:"bytes,1,opt,name=company"`
	xxx_hidden_Position    *string                `protobuf:"bytes,2,opt,name=position"`
	xxx_hidden_StartDate   *date.Date             `protobuf:"bytes,3,opt,name=start_date,json=startDate"`
	xxx_hidden_EndDate     *date.Date             `protobuf:"bytes,4,opt,name=end_date,json=endDate"`
	xxx_hidden_Info        *string                `protobuf:"bytes,5,opt,name=info"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Experience) Reset() {
	*x = Experience{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Experience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experience) ProtoMessage() {}

func (x *Experience) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Experience) GetCompany() string {
	if x != nil {
		if x.xxx_hidden_Company != nil {
			return *x.xxx_hidden_Company
		}
		return ""
	}
	return ""
}

func (x *Experience) GetPosition() string {
	if x != nil {
		if x.xxx_hidden_Position != nil {
			return *x.xxx_hidden_Position
		}
		return ""
	}
	return ""
}

func (x *Experience) GetStartDate() *date.Date {
	if x != nil {
		return x.xxx_hidden_StartDate
	}
	return nil
}

func (x *Experience) GetEndDate() *date.Date {
	if x != nil {
		return x.xxx_hidden_EndDate
	}
	return nil
}

func (x *Experience) GetInfo() string {
	if x != nil {
		if x.xxx_hidden_Info != nil {
			return *x.xxx_hidden_Info
		}
		return ""
	}
	return ""
}

func (x *Experience) SetCompany(v string) {
	x.xxx_hidden_Company = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Experience) SetPosition(v string) {
	x.xxx_hidden_Position = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Experience) SetStartDate(v *date.Date) {
	x.xxx_hidden_StartDate = v
}

func (x *Experience) SetEndDate(v *date.Date) {
	x.xxx_hidden_EndDate = v
}

func (x *Experience) SetInfo(v string) {
	x.xxx_hidden_Info = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Experience) HasCompany() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Experience) HasPosition() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Experience) HasStartDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartDate != nil
}

func (x *Experience) HasEndDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EndDate != nil
}

func (x *Experience) HasInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Experience) ClearCompany() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Company = nil
}

func (x *Experience) ClearPosition() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Position = nil
}

func (x *Experience) ClearStartDate() {
	x.xxx_hidden_StartDate = nil
}

func (x *Experience) ClearEndDate() {
	x.xxx_hidden_EndDate = nil
}

func (x *Experience) ClearInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Info = nil
}

type Experience_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Company   *string
	Position  *string
	StartDate *date.Date
	EndDate   *date.Date
	Info      *string
}

func (b0 Experience_builder) Build() *Experience {
	m0 := &Experience{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Company != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Company = b.Company
	}
	if b.Position != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Position = b.Position
	}
	x.xxx_hidden_StartDate = b.StartDate
	x.xxx_hidden_EndDate = b.EndDate
	if b.Info != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Info = b.Info
	}
	return m0
}

type ExperienceList struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Experiences *[]*Experience         `protobuf:"bytes,1,rep,name=experiences"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExperienceList) Reset() {
	*x = ExperienceList{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperienceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperienceList) ProtoMessage() {}

func (x *ExperienceList) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExperienceList) GetExperiences() []*Experience {
	if x != nil {
		if x.xxx_hidden_Experiences != nil {
			return *x.xxx_hidden_Experiences
		}
	}
	return nil
}

func (x *ExperienceList) SetExperiences(v []*Experience) {
	x.xxx_hidden_Experiences = &v
}

type ExperienceList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Experiences []*Experience
}

func (b0 ExperienceList_builder) Build() *ExperienceList {
	m0 := &ExperienceList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Experiences = &b.Experiences
	return m0
}

type EducationList struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Educations *[]*Education          `protobuf:"bytes,1,rep,name=educations"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EducationList) Reset() {
	*x = EducationList{}
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EducationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EducationList) ProtoMessage() {}

func (x *EducationList) ProtoReflect() protoreflect.Message {
	mi := &file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EducationList) GetEducations() []*Education {
	if x != nil {
		if x.xxx_hidden_Educations != nil {
			return *x.xxx_hidden_Educations
		}
	}
	return nil
}

func (x *EducationList) SetEducations(v []*Education) {
	x.xxx_hidden_Educations = &v
}

type EducationList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Educations []*Education
}

func (b0 EducationList_builder) Build() *EducationList {
	m0 := &EducationList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Educations = &b.Educations
	return m0
}

var File_hestia_jobfair_identity_v1_identity_management_proto protoreflect.FileDescriptor

var file_hestia_jobfair_identity_v1_identity_management_proto_rawDesc = string([]byte{
	0x0a, 0x34, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2f, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x1a, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x68,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x2f, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e,
	0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xaf,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08,
	0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x0c, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66,
	0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f,
	0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x12,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4d, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x45, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f,
	0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87,
	0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1b, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x27,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x75, 0x6d, 0x6e, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x01,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x05,
	0xaa, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xaa, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x0d, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x9f, 0x03,
	0x0a, 0x19, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x28, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f,
	0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66,
	0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x28, 0x2e, 0x68, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x29, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xff, 0x09, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66,
	0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x62, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x68, 0x65,
	0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61,
	0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2d, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66,
	0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x2d, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x30, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x45, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f,
	0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a,
	0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x68, 0x65, 0x73, 0x74,
	0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x68,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x74, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x30, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61,
	0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62,
	0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x2e, 0x68, 0x65, 0x73,
	0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x68, 0x65, 0x73, 0x74, 0x69,
	0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x68,
	0x65, 0x73, 0x74, 0x69, 0x61, 0x2e, 0x6a, 0x6f, 0x62, 0x66, 0x61, 0x69, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x28, 0x5a, 0x1e, 0x68, 0x65, 0x73, 0x74, 0x69, 0x61, 0x2f, 0x6a, 0x6f, 0x62, 0x66,
	0x61, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_hestia_jobfair_identity_v1_identity_management_proto_goTypes = []any{
	(*LoginRequest)(nil),             // 0: hestia.jobfair.identity.v1.LoginRequest
	(*LoginResponse)(nil),            // 1: hestia.jobfair.identity.v1.LoginResponse
	(*RegisterRequest)(nil),          // 2: hestia.jobfair.identity.v1.RegisterRequest
	(*RegisterResponse)(nil),         // 3: hestia.jobfair.identity.v1.RegisterResponse
	(*AliveRequest)(nil),             // 4: hestia.jobfair.identity.v1.AliveRequest
	(*AliveResponse)(nil),            // 5: hestia.jobfair.identity.v1.AliveResponse
	(*LogoutRequest)(nil),            // 6: hestia.jobfair.identity.v1.LogoutRequest
	(*LogoutResponse)(nil),           // 7: hestia.jobfair.identity.v1.LogoutResponse
	(*GetUsersRequest)(nil),          // 8: hestia.jobfair.identity.v1.GetUsersRequest
	(*GetUsersResponse)(nil),         // 9: hestia.jobfair.identity.v1.GetUsersResponse
	(*GetUserRequest)(nil),           // 10: hestia.jobfair.identity.v1.GetUserRequest
	(*GetUserResponse)(nil),          // 11: hestia.jobfair.identity.v1.GetUserResponse
	(*SearchUsersRequest)(nil),       // 12: hestia.jobfair.identity.v1.SearchUsersRequest
	(*SearchUsersResponse)(nil),      // 13: hestia.jobfair.identity.v1.SearchUsersResponse
	(*UpdateUserRequest)(nil),        // 14: hestia.jobfair.identity.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),       // 15: hestia.jobfair.identity.v1.UpdateUserResponse
	(*DeleteUserRequest)(nil),        // 16: hestia.jobfair.identity.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),       // 17: hestia.jobfair.identity.v1.DeleteUserResponse
	(*AddExperienceRequest)(nil),     // 18: hestia.jobfair.identity.v1.AddExperienceRequest
	(*AddExperienceResponse)(nil),    // 19: hestia.jobfair.identity.v1.AddExperienceResponse
	(*AddEducationRequest)(nil),      // 20: hestia.jobfair.identity.v1.AddEducationRequest
	(*AddEducationResponse)(nil),     // 21: hestia.jobfair.identity.v1.AddEducationResponse
	(*GetExperiencesRequest)(nil),    // 22: hestia.jobfair.identity.v1.GetExperiencesRequest
	(*GetExperiencesResponse)(nil),   // 23: hestia.jobfair.identity.v1.GetExperiencesResponse
	(*GetEducationsRequest)(nil),     // 24: hestia.jobfair.identity.v1.GetEducationsRequest
	(*GetEducationsResponse)(nil),    // 25: hestia.jobfair.identity.v1.GetEducationsResponse
	(*DeleteExperienceRequest)(nil),  // 26: hestia.jobfair.identity.v1.DeleteExperienceRequest
	(*DeleteExperienceResponse)(nil), // 27: hestia.jobfair.identity.v1.DeleteExperienceResponse
	(*DeleteEducationRequest)(nil),   // 28: hestia.jobfair.identity.v1.DeleteEducationRequest
	(*DeleteEducationResponse)(nil),  // 29: hestia.jobfair.identity.v1.DeleteEducationResponse
	(*User)(nil),                     // 30: hestia.jobfair.identity.v1.User
	(*Education)(nil),                // 31: hestia.jobfair.identity.v1.Education
	(*Experience)(nil),               // 32: hestia.jobfair.identity.v1.Experience
	(*ExperienceList)(nil),           // 33: hestia.jobfair.identity.v1.ExperienceList
	(*EducationList)(nil),            // 34: hestia.jobfair.identity.v1.EducationList
	(*common.Token)(nil),             // 35: hestia.jobfair.common.v1.Token
	(*common.TimePagination)(nil),    // 36: hestia.jobfair.common.v1.TimePagination
	(*common.Id)(nil),                // 37: hestia.jobfair.common.v1.Id
	(*common.Interest)(nil),          // 38: hestia.jobfair.common.v1.Interest
	(*common.ContractType)(nil),      // 39: hestia.jobfair.common.v1.ContractType
	(*date.Date)(nil),                // 40: google.type.Date
}
var file_hestia_jobfair_identity_v1_identity_management_proto_depIdxs = []int32{
	35, // 0: hestia.jobfair.identity.v1.LoginResponse.token:type_name -> hestia.jobfair.common.v1.Token
	30, // 1: hestia.jobfair.identity.v1.RegisterRequest.user:type_name -> hestia.jobfair.identity.v1.User
	31, // 2: hestia.jobfair.identity.v1.RegisterRequest.education:type_name -> hestia.jobfair.identity.v1.Education
	35, // 3: hestia.jobfair.identity.v1.AliveRequest.token:type_name -> hestia.jobfair.common.v1.Token
	35, // 4: hestia.jobfair.identity.v1.LogoutRequest.token:type_name -> hestia.jobfair.common.v1.Token
	36, // 5: hestia.jobfair.identity.v1.GetUsersRequest.time_pagination:type_name -> hestia.jobfair.common.v1.TimePagination
	36, // 6: hestia.jobfair.identity.v1.GetUsersResponse.pagination:type_name -> hestia.jobfair.common.v1.TimePagination
	30, // 7: hestia.jobfair.identity.v1.GetUsersResponse.users:type_name -> hestia.jobfair.identity.v1.User
	37, // 8: hestia.jobfair.identity.v1.GetUserRequest.id:type_name -> hestia.jobfair.common.v1.Id
	30, // 9: hestia.jobfair.identity.v1.GetUserResponse.user:type_name -> hestia.jobfair.identity.v1.User
	30, // 10: hestia.jobfair.identity.v1.SearchUsersResponse.users:type_name -> hestia.jobfair.identity.v1.User
	30, // 11: hestia.jobfair.identity.v1.UpdateUserRequest.user:type_name -> hestia.jobfair.identity.v1.User
	37, // 12: hestia.jobfair.identity.v1.DeleteUserRequest.id:type_name -> hestia.jobfair.common.v1.Id
	32, // 13: hestia.jobfair.identity.v1.AddExperienceRequest.experience:type_name -> hestia.jobfair.identity.v1.Experience
	31, // 14: hestia.jobfair.identity.v1.AddEducationRequest.education:type_name -> hestia.jobfair.identity.v1.Education
	37, // 15: hestia.jobfair.identity.v1.GetExperiencesRequest.id:type_name -> hestia.jobfair.common.v1.Id
	33, // 16: hestia.jobfair.identity.v1.GetExperiencesResponse.experience_list:type_name -> hestia.jobfair.identity.v1.ExperienceList
	37, // 17: hestia.jobfair.identity.v1.GetEducationsRequest.id:type_name -> hestia.jobfair.common.v1.Id
	34, // 18: hestia.jobfair.identity.v1.GetEducationsResponse.education_list:type_name -> hestia.jobfair.identity.v1.EducationList
	37, // 19: hestia.jobfair.identity.v1.DeleteExperienceRequest.id:type_name -> hestia.jobfair.common.v1.Id
	37, // 20: hestia.jobfair.identity.v1.DeleteEducationRequest.id:type_name -> hestia.jobfair.common.v1.Id
	38, // 21: hestia.jobfair.identity.v1.User.interests:type_name -> hestia.jobfair.common.v1.Interest
	39, // 22: hestia.jobfair.identity.v1.User.contract_types:type_name -> hestia.jobfair.common.v1.ContractType
	40, // 23: hestia.jobfair.identity.v1.Education.start_date:type_name -> google.type.Date
	40, // 24: hestia.jobfair.identity.v1.Education.end_date:type_name -> google.type.Date
	40, // 25: hestia.jobfair.identity.v1.Experience.start_date:type_name -> google.type.Date
	40, // 26: hestia.jobfair.identity.v1.Experience.end_date:type_name -> google.type.Date
	32, // 27: hestia.jobfair.identity.v1.ExperienceList.experiences:type_name -> hestia.jobfair.identity.v1.Experience
	31, // 28: hestia.jobfair.identity.v1.EducationList.educations:type_name -> hestia.jobfair.identity.v1.Education
	0,  // 29: hestia.jobfair.identity.v1.IdentityManagementService.Login:input_type -> hestia.jobfair.identity.v1.LoginRequest
	2,  // 30: hestia.jobfair.identity.v1.IdentityManagementService.Register:input_type -> hestia.jobfair.identity.v1.RegisterRequest
	4,  // 31: hestia.jobfair.identity.v1.IdentityManagementService.Alive:input_type -> hestia.jobfair.identity.v1.AliveRequest
	6,  // 32: hestia.jobfair.identity.v1.IdentityManagementService.Logout:input_type -> hestia.jobfair.identity.v1.LogoutRequest
	8,  // 33: hestia.jobfair.identity.v1.UserManagementService.GetUsers:input_type -> hestia.jobfair.identity.v1.GetUsersRequest
	10, // 34: hestia.jobfair.identity.v1.UserManagementService.GetUser:input_type -> hestia.jobfair.identity.v1.GetUserRequest
	12, // 35: hestia.jobfair.identity.v1.UserManagementService.SearchUsers:input_type -> hestia.jobfair.identity.v1.SearchUsersRequest
	14, // 36: hestia.jobfair.identity.v1.UserManagementService.UpdateUser:input_type -> hestia.jobfair.identity.v1.UpdateUserRequest
	16, // 37: hestia.jobfair.identity.v1.UserManagementService.DeleteUser:input_type -> hestia.jobfair.identity.v1.DeleteUserRequest
	18, // 38: hestia.jobfair.identity.v1.UserManagementService.AddExperience:input_type -> hestia.jobfair.identity.v1.AddExperienceRequest
	20, // 39: hestia.jobfair.identity.v1.UserManagementService.AddEducation:input_type -> hestia.jobfair.identity.v1.AddEducationRequest
	22, // 40: hestia.jobfair.identity.v1.UserManagementService.GetExperiences:input_type -> hestia.jobfair.identity.v1.GetExperiencesRequest
	24, // 41: hestia.jobfair.identity.v1.UserManagementService.GetEducations:input_type -> hestia.jobfair.identity.v1.GetEducationsRequest
	26, // 42: hestia.jobfair.identity.v1.UserManagementService.DeleteExperience:input_type -> hestia.jobfair.identity.v1.DeleteExperienceRequest
	28, // 43: hestia.jobfair.identity.v1.UserManagementService.DeleteEducation:input_type -> hestia.jobfair.identity.v1.DeleteEducationRequest
	1,  // 44: hestia.jobfair.identity.v1.IdentityManagementService.Login:output_type -> hestia.jobfair.identity.v1.LoginResponse
	3,  // 45: hestia.jobfair.identity.v1.IdentityManagementService.Register:output_type -> hestia.jobfair.identity.v1.RegisterResponse
	5,  // 46: hestia.jobfair.identity.v1.IdentityManagementService.Alive:output_type -> hestia.jobfair.identity.v1.AliveResponse
	7,  // 47: hestia.jobfair.identity.v1.IdentityManagementService.Logout:output_type -> hestia.jobfair.identity.v1.LogoutResponse
	9,  // 48: hestia.jobfair.identity.v1.UserManagementService.GetUsers:output_type -> hestia.jobfair.identity.v1.GetUsersResponse
	11, // 49: hestia.jobfair.identity.v1.UserManagementService.GetUser:output_type -> hestia.jobfair.identity.v1.GetUserResponse
	13, // 50: hestia.jobfair.identity.v1.UserManagementService.SearchUsers:output_type -> hestia.jobfair.identity.v1.SearchUsersResponse
	15, // 51: hestia.jobfair.identity.v1.UserManagementService.UpdateUser:output_type -> hestia.jobfair.identity.v1.UpdateUserResponse
	17, // 52: hestia.jobfair.identity.v1.UserManagementService.DeleteUser:output_type -> hestia.jobfair.identity.v1.DeleteUserResponse
	19, // 53: hestia.jobfair.identity.v1.UserManagementService.AddExperience:output_type -> hestia.jobfair.identity.v1.AddExperienceResponse
	21, // 54: hestia.jobfair.identity.v1.UserManagementService.AddEducation:output_type -> hestia.jobfair.identity.v1.AddEducationResponse
	23, // 55: hestia.jobfair.identity.v1.UserManagementService.GetExperiences:output_type -> hestia.jobfair.identity.v1.GetExperiencesResponse
	25, // 56: hestia.jobfair.identity.v1.UserManagementService.GetEducations:output_type -> hestia.jobfair.identity.v1.GetEducationsResponse
	27, // 57: hestia.jobfair.identity.v1.UserManagementService.DeleteExperience:output_type -> hestia.jobfair.identity.v1.DeleteExperienceResponse
	29, // 58: hestia.jobfair.identity.v1.UserManagementService.DeleteEducation:output_type -> hestia.jobfair.identity.v1.DeleteEducationResponse
	44, // [44:59] is the sub-list for method output_type
	29, // [29:44] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_hestia_jobfair_identity_v1_identity_management_proto_init() }
func file_hestia_jobfair_identity_v1_identity_management_proto_init() {
	if File_hestia_jobfair_identity_v1_identity_management_proto != nil {
		return
	}
	file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes[12].OneofWrappers = []any{
		(*searchUsersRequest_Name)(nil),
		(*searchUsersRequest_Email)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hestia_jobfair_identity_v1_identity_management_proto_rawDesc), len(file_hestia_jobfair_identity_v1_identity_management_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_hestia_jobfair_identity_v1_identity_management_proto_goTypes,
		DependencyIndexes: file_hestia_jobfair_identity_v1_identity_management_proto_depIdxs,
		MessageInfos:      file_hestia_jobfair_identity_v1_identity_management_proto_msgTypes,
	}.Build()
	File_hestia_jobfair_identity_v1_identity_management_proto = out.File
	file_hestia_jobfair_identity_v1_identity_management_proto_goTypes = nil
	file_hestia_jobfair_identity_v1_identity_management_proto_depIdxs = nil
}
